
   ({
   // the HTML compiler's mime type
   // ----------------------------------------------------------------------------
      mimeType : 'text/html',
   // ----------------------------------------------------------------------------


   // valid tags
   // ----------------------------------------------------------------------------
      nodeList : 'a abbr address area article aside audio b base bdi bdo blockquote body br button canvas caption cite code col colgroup command datalist dd del details dfn div dl dt em embed fieldset figcaption figure footer form h1 h2 h3 h4 h5 h6 head header hgroup hr html i iframe img input ins kbd keygen label legend li link map mark menu meta meter nav noscript object ol optgroup option output p param pre progress q rp rt ruby s samp script section select small source span strong style sub summary sup table tbody td textarea tfoot th thead time title tr track u ul var video wbr',
      voidList : 'br hr img input link meta area base col command embed keygen param source track wbr',
      srcNodes : 'audio embed iframe img input script source track video',
   // ----------------------------------------------------------------------------


   // deprecated tags
   // ----------------------------------------------------------------------------
      deprTags : 'applet basefont center dir embed font isindex listing menu plaintext s strike u xmp',
      deprAttr : 'alink background bgcolor border clear hspace language link nowrap start text vlink vspace',
   // ----------------------------------------------------------------------------


   // embed or ref according to file extension, tag name and maximum file size
   // ----------------------------------------------------------------------------
      embedRef : {
                     js   : {tags:'script pre'},
                     css  : {tags:'style pre'},
                     txt  : {tags:'pre div p'},
                     jpg  : {tags:'img',          size:72, mime:'image/jpeg'},
                     png  : {tags:'img',          size:72, mime:'image/png'},
                     svg  : {tags:'div'},
                     webm : {tags:'audio',        size:72, mime:'audio/webm'},
                     webp : {tags:'img',          size:72, mime:'image/webp'},
                 },
   // ----------------------------------------------------------------------------


   // auto-insert nodes according to the given parent node name
   // ----------------------------------------------------------------------------
      autoList : {
                     head  :  [
                                 {meta:'', charset:'utf-8'},
                                 {meta:'', http-equiv:'X-UA-Compatible', content:'IE=edge'},
                                 {meta:'', name:'viewport', content:'width=device-width, initial-scale=1'},
                                 {style:'#defaultStyle', 'text/css':
                                 {
                                    html:
                                    { height:100%; },

                                    body:
                                    {
                                       height:100%;
                                       margin:0;
                                       background:#121314;
                                       font-family:'Arial, Helvitical, Sans';
                                       font-size:11px;
                                       color:#aaa;
                                    }
                                 }}
                              ],
                 },
   // ----------------------------------------------------------------------------


   // auto-assign attributes according to the given node name
   // ----------------------------------------------------------------------------
      autoAttr : {
                     table  :  {cellpadding:0, cellspacing:0},
                     img    :  {alt:'image'},
                     td     :  {align:'left', valign:'top'}
                 },
   // ----------------------------------------------------------------------------


   // if comment is needed in the output, use these begin and end characters
   // ----------------------------------------------------------------------------
      comments : ['<!-- ', ' -->'],
   // ----------------------------------------------------------------------------


   // output to be minified, if false, output is in "pretty print"
   // ----------------------------------------------------------------------------
      minified : false,
   // ----------------------------------------------------------------------------
   })
